/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Merged_Geometry002: THREE.Mesh
    Merged_Geometry_10002: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/desk-transformed.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Merged_Geometry002.geometry}
        material={materials['Material.001']}
      />
      <mesh castShadow receiveShadow geometry={nodes.Merged_Geometry_10002.geometry} material={materials.Material} />
    </group>
  )
}

useGLTF.preload('/desk-transformed.glb')
